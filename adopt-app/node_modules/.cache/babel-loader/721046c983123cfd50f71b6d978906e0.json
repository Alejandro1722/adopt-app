{"ast":null,"code":"import moment from 'moment';\nexport const preparePerson = function () {\n  let people = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  return people.reduce((acc, el) => acc.concat({ ...el,\n    birthday: moment(el.birthday).format('L')\n  }), []);\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/React/11-adopt-app/src/helpers/preparePerson.js"],"names":["moment","preparePerson","people","reduce","acc","el","concat","birthday","format"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,aAAa,GAAI,YAAkB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AAE5C,SAAOA,MAAM,CAACC,MAAP,CAAc,CAACC,GAAD,EAAMC,EAAN,KAAaD,GAAG,CAACE,MAAJ,CAAW,EAAC,GAAGD,EAAJ;AAAQE,IAAAA,QAAQ,EAAEP,MAAM,CAACK,EAAE,CAACE,QAAJ,CAAN,CAAoBC,MAApB,CAA2B,GAA3B;AAAlB,GAAX,CAA3B,EAA2F,EAA3F,CAAP;AACH,CAHM","sourcesContent":["import moment from 'moment';  \r\n\r\nexport const preparePerson =  ( people = [] )=> {\r\n \r\n    return people.reduce((acc, el) => acc.concat({...el, birthday: moment(el.birthday).format('L')}), [])\r\n}"]},"metadata":{},"sourceType":"module"}