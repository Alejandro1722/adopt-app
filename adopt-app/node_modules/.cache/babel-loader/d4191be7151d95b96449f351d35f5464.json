{"ast":null,"code":"import moment from 'moment';\nexport const preparePerson = function () {\n  let people = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  console.log(people);\n  return people.reduce(e => ({ ...e,\n    birthday: moment(e.birthday).toDate()\n  }));\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/React/11-adopt-app/src/helpers/preparePerson.js"],"names":["moment","preparePerson","people","console","log","reduce","e","birthday","toDate"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,OAAO,MAAMC,aAAa,GAAI,YAAkB;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;AAE5CC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACA,SAAOA,MAAM,CAACG,MAAP,CACFC,CAAD,KAAQ,EACJ,GAAGA,CADC;AAEJC,IAAAA,QAAQ,EAAEP,MAAM,CAAEM,CAAC,CAACC,QAAJ,CAAN,CAAqBC,MAArB;AAFN,GAAR,CADG,CAAP;AAMH,CATM","sourcesContent":["import moment from 'moment';  \r\n\r\nexport const preparePerson =  ( people = [] )=> {\r\n\r\n    console.log(people)\r\n    return people.reduce(\r\n        (e) => ({\r\n            ...e, \r\n            birthday: moment( e.birthday ).toDate(), \r\n        })\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}