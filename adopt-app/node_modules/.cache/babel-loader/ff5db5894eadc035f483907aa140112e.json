{"ast":null,"code":"import { types } from \"../types/types\";\n\nconst initialState = () => ({\n  person: []\n});\n\nexport const peopleReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.createPerson:\n      return {\n        person: [...action.payload]\n      };\n\n    case types.deletePerson:\n      return {\n        person: state.person.filter(person => person.id !== action.payload)\n      };\n\n    case types.editPerson:\n      return {\n        person: state.person.map(person => person.id === action.payload.id ? action.payload.person : person)\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/React/11-adopt-app/src/reducers/peopleReducer.js"],"names":["types","initialState","person","peopleReducer","state","action","type","createPerson","payload","deletePerson","filter","id","editPerson","map"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,YAAY,GAAG,OAAO;AACxBC,EAAAA,MAAM,EAAE;AADgB,CAAP,CAArB;;AAIA,OAAO,MAAMC,aAAa,GAAG,YAAoC;AAAA,MAAlCC,KAAkC,uEAA1BH,YAA0B;AAAA,MAAZI,MAAY;;AAE7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,KAAK,CAACO,YAAX;AACI,aAAO;AACHL,QAAAA,MAAM,EAAE,CAAE,GAAGG,MAAM,CAACG,OAAZ;AADL,OAAP;;AAGJ,SAAKR,KAAK,CAACS,YAAX;AACI,aAAO;AACHP,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaQ,MAAb,CACJR,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAcN,MAAM,CAACG,OAD3B;AADL,OAAP;;AAIJ,SAAKR,KAAK,CAACY,UAAX;AACI,aAAO;AACHV,QAAAA,MAAM,EAAEE,KAAK,CAACF,MAAN,CAAaW,GAAb,CACJX,MAAM,IAAIA,MAAM,CAACS,EAAP,KAAcN,MAAM,CAACG,OAAP,CAAeG,EAA7B,GACRN,MAAM,CAACG,OAAP,CAAeN,MADP,GAERA,MAHE;AADL,OAAP;;AAOJ;AACI,aAAOE,KAAP;AAnBR;AAsBH,CAxBM","sourcesContent":["import { types } from \"../types/types\";\r\n\r\nconst initialState = () => ({\r\n    person: []\r\n})\r\n\r\nexport const peopleReducer = ( state = initialState, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.createPerson:\r\n            return {\r\n                person: [ ...action.payload ]\r\n            }\r\n        case types.deletePerson:\r\n            return {\r\n                person: state.person.filter( \r\n                    person => person.id !== action.payload )\r\n            }\r\n        case types.editPerson: \r\n            return {\r\n                person: state.person.map( \r\n                    person => person.id === action.payload.id\r\n                    ? action.payload.person \r\n                    : person   \r\n                )\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}