{"ast":null,"code":"import { fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\"; // Cargar todas las personas\n\nexport const peopleStartLoading = () => {\n  return async dispatch => {\n    try {\n      const resp = await fetchSinToken('all');\n      const body = await resp.json();\n      dispatch(eventLoaded(body));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = people => ({\n  type: types.loadingPerson,\n  payload: people\n}); // Agregar una persona\n\n\nexport const startAddNewPeople = person => {\n  return async dispatch => {\n    try {\n      const resp = await fetchSinToken('new', person, 'POST');\n      const body = await resp.json();\n      console.log(body.id);\n      dispatch(addNewPerson(id, person));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst addNewPerson = (id, person) => ({\n  type: types.createPerson,\n  payload: {\n    id,\n    ...person\n  }\n}); // Eliminar una persona \n\n\nexport const startDeletePerson = id => {\n  return async dispatch => {\n    try {\n      const resp = await fetchSinToken(id, {}, 'DELETE');\n      const body = await resp.json();\n      dispatch(deletePerson(id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst deletePerson = id => ({\n  type: types.deletePerson,\n  payload: id\n}); // Actualizar persona\n\n\nexport const startEditPerson = person => {\n  return async dispatch => {\n    try {\n      const resp = await fetchSinToken(person.id, person, 'PUT');\n      const body = await resp.json();\n      dispatch(editPerson(person));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst editPerson = person => ({\n  type: types.editPerson,\n  payload: person\n}); // Seleccionar una persona\n\n\nexport const activePerson = person => ({\n  type: types.selectPerson,\n  payload: person\n}); // Seleccionar una persona\n\nexport const noActivePerson = () => ({\n  type: types.clearActivePerson\n});","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/React/11-adopt-app/src/actions/people.js"],"names":["fetchSinToken","types","peopleStartLoading","dispatch","resp","body","json","eventLoaded","error","console","log","people","type","loadingPerson","payload","startAddNewPeople","person","id","addNewPerson","createPerson","startDeletePerson","deletePerson","startEditPerson","editPerson","activePerson","selectPerson","noActivePerson","clearActivePerson"],"mappings":"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","sourcesContent":["import { fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\n// Cargar todas las personas\r\nexport const peopleStartLoading = () =>{\r\n    \r\n    return async( dispatch ) => {\r\n        \r\n        try {\r\n            const resp = await fetchSinToken('all'); \r\n            const body = await resp.json(); \r\n            dispatch( eventLoaded(body) ); \r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventLoaded = ( people ) => ({\r\n    type: types.loadingPerson,\r\n    payload: people\r\n}); \r\n// Agregar una persona\r\nexport const startAddNewPeople = ( person ) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchSinToken('new', person, 'POST');\r\n            const body = await resp.json();\r\n            console.log(body.id); \r\n            dispatch( addNewPerson(id, person) )\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\nconst addNewPerson = ( id, person ) => ({\r\n    type: types.createPerson,\r\n    payload: { \r\n        id, \r\n        ...person\r\n    }\r\n})\r\n\r\n// Eliminar una persona \r\nexport const startDeletePerson = ( id ) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchSinToken( id, {}, 'DELETE'); \r\n            const body = await resp.json(); \r\n            dispatch(deletePerson( id ))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n}\r\nconst deletePerson = ( id ) => ({ \r\n    type: types.deletePerson,\r\n    payload: id\r\n})\r\n// Actualizar persona\r\nexport const startEditPerson = (person) => {\r\n    return async( dispatch ) => {\r\n        try {\r\n            const resp = await fetchSinToken( person.id, person, 'PUT'); \r\n            const body = await resp.json(); \r\n            dispatch( editPerson( person ) ); \r\n\r\n\r\n        } catch (error) {\r\n            console.log(error); \r\n        }\r\n    }\r\n}\r\nconst editPerson = ( person )=> ({\r\n    type: types.editPerson,\r\n    payload: person\r\n})\r\n// Seleccionar una persona\r\nexport const activePerson = ( person ) => ({\r\n    type: types.selectPerson,\r\n    payload: person\r\n}); \r\n// Seleccionar una persona\r\nexport const noActivePerson = ( ) => ({\r\n    type: types.clearActivePerson\r\n}); "]},"metadata":{},"sourceType":"module"}