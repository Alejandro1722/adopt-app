{"ast":null,"code":"import { fetchSinToken } from \"../helpers/fetch\";\nimport { preparePerson } from \"../helpers/preparePerson\";\nimport { types } from \"../types/types\";\nimport moment from 'moment'; // Cargar todas las personas\n\nexport const peopleStartLoading = () => {\n  return async dispatch => {\n    try {\n      const resp = await fetchSinToken('all');\n      const body = await resp.json();\n      dispatch(eventLoaded(body));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst eventLoaded = people => ({\n  type: types.loadingPerson,\n  payload: people\n}); // Agregar una persona\n\n\nexport const startAddNewPeople = person => {\n  return async dispatch => {\n    const data = person.reduce((acc, el) => acc.concat({ ...el,\n      birthday: moment(el.birthday).format('L')\n    }), []);\n\n    try {\n      const resp = await fetchSinToken('new', preparePerson(person), 'POST');\n      dispatch(addNewPerson(person));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst addNewPerson = person => ({\n  type: types.createPerson,\n  payload: person\n}); // Eliminar una persona \n\n\nexport const startDeletePerson = id => {\n  return async dispatch => {\n    try {\n      const resp = await fetchSinToken(id, {}, 'DELETE');\n      const body = await resp.json();\n      dispatch(deletePerson(id));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\n\nconst deletePerson = id => ({\n  type: types.deletePerson,\n  payload: id\n}); // Seleccionar una persona\n\n\nexport const activePerson = person => ({\n  type: types.selectPerson,\n  payload: person\n});","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/React/11-adopt-app/src/actions/people.js"],"names":["fetchSinToken","preparePerson","types","moment","peopleStartLoading","dispatch","resp","body","json","eventLoaded","error","console","log","people","type","loadingPerson","payload","startAddNewPeople","person","data","reduce","acc","el","concat","birthday","format","addNewPerson","createPerson","startDeletePerson","id","deletePerson","activePerson","selectPerson"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAGA;;AACA,OAAO,MAAMC,kBAAkB,GAAG,MAAK;AAEnC,SAAO,MAAOC,QAAP,IAAqB;AAExB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMN,aAAa,CAAC,KAAD,CAAhC;AACA,YAAMO,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;AACAH,MAAAA,QAAQ,CAAEI,WAAW,CAACF,IAAD,CAAb,CAAR;AAEH,KALD,CAKE,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;AAWH,CAbM;;AAcP,MAAMD,WAAW,GAAKI,MAAF,KAAe;AAC/BC,EAAAA,IAAI,EAAEZ,KAAK,CAACa,aADmB;AAE/BC,EAAAA,OAAO,EAAEH;AAFsB,CAAf,CAApB,C,CAIA;;;AACA,OAAO,MAAMI,iBAAiB,GAAKC,MAAF,IAAc;AAE3C,SAAO,MAAMb,QAAN,IAAmB;AAEtB,UAAMc,IAAI,GAAGD,MAAM,CAACE,MAAP,CAAc,CAACC,GAAD,EAAMC,EAAN,KAAaD,GAAG,CAACE,MAAJ,CAAW,EAAC,GAAGD,EAAJ;AAAQE,MAAAA,QAAQ,EAAErB,MAAM,CAACmB,EAAE,CAACE,QAAJ,CAAN,CAAoBC,MAApB,CAA2B,GAA3B;AAAlB,KAAX,CAA3B,EAA2F,EAA3F,CAAb;;AAEA,QAAI;AACA,YAAMnB,IAAI,GAAG,MAAMN,aAAa,CAAC,KAAD,EAAQC,aAAa,CAACiB,MAAD,CAArB,EAA+B,MAA/B,CAAhC;AACAb,MAAAA,QAAQ,CAAEqB,YAAY,CAACR,MAAD,CAAd,CAAR;AAEH,KAJD,CAIE,OAAOR,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AAEJ,GAZD;AAaH,CAfM;;AAgBP,MAAMgB,YAAY,GAAKR,MAAF,KAAe;AAChCJ,EAAAA,IAAI,EAAEZ,KAAK,CAACyB,YADoB;AAEhCX,EAAAA,OAAO,EAAEE;AAFuB,CAAf,CAArB,C,CAKA;;;AACA,OAAO,MAAMU,iBAAiB,GAAKC,EAAF,IAAU;AAEvC,SAAO,MAAOxB,QAAP,IAAoB;AAEvB,QAAI;AACA,YAAMC,IAAI,GAAG,MAAMN,aAAa,CAAE6B,EAAF,EAAM,EAAN,EAAU,QAAV,CAAhC;AACA,YAAMtB,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;AACAH,MAAAA,QAAQ,CAACyB,YAAY,CAAED,EAAF,CAAb,CAAR;AAEH,KALD,CAKE,OAAOnB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAVD;AAYH,CAdM;;AAeP,MAAMoB,YAAY,GAAKD,EAAF,KAAW;AAC5Bf,EAAAA,IAAI,EAAEZ,KAAK,CAAC4B,YADgB;AAE5Bd,EAAAA,OAAO,EAAEa;AAFmB,CAAX,CAArB,C,CAKA;;;AACA,OAAO,MAAME,YAAY,GAAKb,MAAF,KAAe;AACvCJ,EAAAA,IAAI,EAAEZ,KAAK,CAAC8B,YAD2B;AAEvChB,EAAAA,OAAO,EAAEE;AAF8B,CAAf,CAArB","sourcesContent":["import { fetchSinToken } from \"../helpers/fetch\";\r\nimport { preparePerson } from \"../helpers/preparePerson\";\r\nimport { types } from \"../types/types\";\r\nimport moment from 'moment'; \r\n\r\n\r\n// Cargar todas las personas\r\nexport const peopleStartLoading = () =>{\r\n    \r\n    return async( dispatch ) => {\r\n        \r\n        try {\r\n            const resp = await fetchSinToken('all'); \r\n            const body = await resp.json(); \r\n            dispatch( eventLoaded(body) ); \r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nconst eventLoaded = ( people ) => ({\r\n    type: types.loadingPerson,\r\n    payload: people\r\n}); \r\n// Agregar una persona\r\nexport const startAddNewPeople = ( person ) => {\r\n\r\n    return async(dispatch) => {\r\n\r\n        const data = person.reduce((acc, el) => acc.concat({...el, birthday: moment(el.birthday).format('L')}), [])\r\n\r\n        try {\r\n            const resp = await fetchSinToken('new', preparePerson(person), 'POST');\r\n            dispatch( addNewPerson(person) )\r\n            \r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n}\r\nconst addNewPerson = ( person ) => ({\r\n    type: types.createPerson,\r\n    payload: person\r\n})\r\n\r\n// Eliminar una persona \r\nexport const startDeletePerson = ( id ) => {\r\n\r\n    return async (dispatch) => {\r\n\r\n        try {\r\n            const resp = await fetchSinToken( id, {}, 'DELETE'); \r\n            const body = await resp.json(); \r\n            dispatch(deletePerson( id ))\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n}\r\nconst deletePerson = ( id ) => ({ \r\n    type: types.deletePerson,\r\n    payload: id\r\n})\r\n\r\n// Seleccionar una persona\r\nexport const activePerson = ( person ) => ({\r\n    type: types.selectPerson,\r\n    payload: person\r\n}); "]},"metadata":{},"sourceType":"module"}