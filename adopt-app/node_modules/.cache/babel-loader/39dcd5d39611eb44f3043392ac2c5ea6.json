{"ast":null,"code":"import { types } from \"../types/types\";\nexport const peopleReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case types.createPerson:\n      return { ...state,\n        people: [...state.people, action.payload]\n      };\n\n    case types.deletePerson:\n      return { ...state,\n        people: state.people.filter(people => people.id !== action.payload)\n      };\n\n    case types.editPerson:\n      return { ...state,\n        people: state.people.map(people => people.id === action.payload.id ? action.payload.people : people)\n      };\n\n    case types.loadingPerson:\n      return { ...state,\n        people: [...action.payload]\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/React/11-adopt-app/src/reducers/peopleReducer.js"],"names":["types","peopleReducer","state","action","type","createPerson","people","payload","deletePerson","filter","id","editPerson","map","loadingPerson"],"mappings":"AAAA,SAASA,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,aAAa,GAAG,YAA0B;AAAA,MAAxBC,KAAwB,uEAAhB,EAAgB;AAAA,MAAZC,MAAY;;AAEnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKJ,KAAK,CAACK,YAAX;AACI,aAAO,EACH,GAAGH,KADA;AAEHI,QAAAA,MAAM,EAAE,CACJ,GAAGJ,KAAK,CAACI,MADL,EAEJH,MAAM,CAACI,OAFH;AAFL,OAAP;;AAOJ,SAAKP,KAAK,CAACQ,YAAX;AACI,aAAO,EACH,GAAGN,KADA;AAEHI,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,CAAaG,MAAb,CACJH,MAAM,IAAIA,MAAM,CAACI,EAAP,KAAcP,MAAM,CAACI,OAD3B;AAFL,OAAP;;AAKJ,SAAKP,KAAK,CAACW,UAAX;AACI,aAAO,EACH,GAAGT,KADA;AAEHI,QAAAA,MAAM,EAAEJ,KAAK,CAACI,MAAN,CAAaM,GAAb,CACJN,MAAM,IAAIA,MAAM,CAACI,EAAP,KAAcP,MAAM,CAACI,OAAP,CAAeG,EAA7B,GACRP,MAAM,CAACI,OAAP,CAAeD,MADP,GAERA,MAHE;AAFL,OAAP;;AAQJ,SAAKN,KAAK,CAACa,aAAX;AACI,aAAO,EACH,GAAGX,KADA;AAEHI,QAAAA,MAAM,EAAE,CAAE,GAAGH,MAAM,CAACI,OAAZ;AAFL,OAAP;;AAIJ;AACI,aAAOL,KAAP;AA9BR;AAiCH,CAnCM","sourcesContent":["import { types } from \"../types/types\";\r\n\r\n\r\nexport const peopleReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.createPerson:\r\n            return {\r\n                ...state, \r\n                people: [ \r\n                    ...state.people,\r\n                    action.payload \r\n                ]\r\n            }\r\n        case types.deletePerson:\r\n            return {\r\n                ...state,\r\n                people: state.people.filter( \r\n                    people => people.id !== action.payload )\r\n            }\r\n        case types.editPerson: \r\n            return {\r\n                ...state,\r\n                people: state.people.map( \r\n                    people => people.id === action.payload.id\r\n                    ? action.payload.people \r\n                    : people   \r\n                )\r\n            }\r\n        case types.loadingPerson:\r\n            return {\r\n                ...state,\r\n                people: [ ...action.payload ]\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}