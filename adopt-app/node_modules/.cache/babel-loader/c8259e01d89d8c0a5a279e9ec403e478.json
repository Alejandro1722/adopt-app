{"ast":null,"code":"import { fetchSinToken } from \"../helpers/fetch\";\nimport { types } from \"../types/types\";\nexport const peopleStartLoading = () => {\n  return async dispatch => {\n    try {\n      const resp = await fetchSinToken('people');\n      const body = await resp.json();\n      const events = body.eventos;\n      dispatch(eventLoaded(events));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};\nexport const eventLoaded = people => ({\n  type: types.loadingPerson,\n  payload: people\n});","map":{"version":3,"sources":["C:/Users/Usuario/Desktop/React/11-adopt-app/src/actions/people.js"],"names":["fetchSinToken","types","peopleStartLoading","dispatch","resp","body","json","events","eventos","eventLoaded","error","console","log","people","type","loadingPerson","payload"],"mappings":"AAAA,SAASA,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAGA,OAAO,MAAMC,kBAAkB,GAAG,MAAK;AAEnC,SAAO,MAAOC,QAAP,IAAqB;AAExB,QAAI;AAEA,YAAMC,IAAI,GAAG,MAAMJ,aAAa,CAAC,QAAD,CAAhC;AACA,YAAMK,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAL,EAAnB;AAEA,YAAMC,MAAM,GAAGF,IAAI,CAACG,OAApB;AACAL,MAAAA,QAAQ,CAAEM,WAAW,CAACF,MAAD,CAAb,CAAR;AAEH,KARD,CAQE,OAAOG,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,GAbD;AAcH,CAhBM;AAiBP,OAAO,MAAMD,WAAW,GAAKI,MAAF,KAAe;AACtCC,EAAAA,IAAI,EAAEb,KAAK,CAACc,aAD0B;AAEtCC,EAAAA,OAAO,EAAEH;AAF6B,CAAf,CAApB","sourcesContent":["import { fetchSinToken } from \"../helpers/fetch\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const peopleStartLoading = () =>{\r\n    \r\n    return async( dispatch ) => {\r\n        \r\n        try {\r\n\r\n            const resp = await fetchSinToken('people'); \r\n            const body = await resp.json(); \r\n\r\n            const events = body.eventos;  \r\n            dispatch( eventLoaded(events) ); \r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\nexport const eventLoaded = ( people ) => ({\r\n    type: types.loadingPerson,\r\n    payload: people\r\n}); "]},"metadata":{},"sourceType":"module"}